@page "/"
@using SeaHome.Services
@inject IJSRuntime JSRuntime
@inject SingletonService singleton
@inject ApartamentService apartmentService
@inject GridFSService service

@*<h1>Display Google Map</h1>
<div id="map" style="height:400px;width:100%;">
</div>*@

<form align="center">
    <div id="map" style="height:400px;width:100%;" class="border border-primary border-3"></div>



<br /><br />
<table align="center" width="60%">
    @foreach (Apartament item in apartmentService.GetApartaments())
    {
       <tbody class="border border-primary border-1">
            <tr>
                <td class="p-3">
                    <tr>стоимость: @item.Price</tr><br/>
                    <tr><textbox rows="5">@item.Text</textbox></tr>
                    <br/>
                    <tr>этаж: @item.Floor</tr>
                    <tr>этажность здания: @item.HouseFloor</tr>
                    <tr>
                        <a href="currentApartament">
                            <button class="btn btn-link" @onclick='(()=>singleton.SetCurrentApartament(item))'>Открыть</button> 
                        </a>
                    </tr>
                </td>
                <td class="p-3">
                    @if (apartmentService.GetImages(item).Count == 0)
                        {
                            <td>фотографии не добавлены</td>
                        }
                    else
                        {
                            ImgToDb imageDB = apartmentService.GetImage(item);
                            service.DownloadImageToWWWRoot(imageDB.Name);
                            <td><a @onclick="(() => singleton.SetCurrentApartament(item))" href="currentApartament" ><img src="/images/@service.file" width="300px" /></a></td>
                        }
                </td>
                
            </tr>
        </tbody>
     }
</table>
</form>


@code{
    //--for GoogleMaps
    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    if (firstRender)
    //    {
    //        await JSRuntime.InvokeVoidAsync("initialize", null); 
    //    }
    //}

    //--for YMap
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            //var par = new { points = new object[] { new { latitude = 14, longitude = 13, title = "metka" }, new { latitude = 19, longitude = 132, title = "metka2" } } };
            await JSRuntime.InvokeVoidAsync("init", new { Marks = DBMethods.GetMapMarksFromDB() }); 
        }
    }
}