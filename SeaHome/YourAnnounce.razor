@page "/yourAnnounce"
@using SeaHome.Services
@inject TransientService transientApartment
@inject SingletonService singleton
@inject ApartamentService apartmentService
@inject GridFSService service


<h3>Ваше объявление</h3>

<form>
     <div class="form-group">
        <label for="textareaAnnounce">описание объекта</label>
        <textarea class="form-control" id="textareaAnnounce" rows="3" @bind="@text">@singleton.currentApartament.Text</textarea>
     </div><br/>

     <div>
        <label for="selectFloor">этаж</label>
        <select class="custom-select custom-select-lg mb-3" id="selectFloor" @bind="@floor">
          <option selected>@singleton.currentApartament.Floor</option>
          <option value="1">1</option>
          <option value="2">2</option>
          <option value="3">3</option>
          <option value="4">4</option>
          <option value="5">5</option>
          <option value="6">6</option>
          <option value="7">7</option>
          <option value="8">8</option>
          <option value="9">9</option>
          <option value="10">10</option>
          <option value="11">11</option>
          <option value="12">12</option>
          <option value="13">13</option>
          <option value="14">14</option>
          <option value="15">15</option>
          <option value="16">16</option>
          <option value="17">17</option>
        </select><br/>
     
         <label for="selectHouseFloor">этажность здания</label>
         <select class="custom-select custom-select-lg mb-3" id="selectHouseFloor" @bind="@houseFloor">
          <option selected>@singleton.currentApartament.HouseFloor</option>
          <option value="1">1</option>
          <option value="2">2</option>
          <option value="3">3</option>
          <option value="4">4</option>
          <option value="5">5</option>
          <option value="6">6</option>
          <option value="7">7</option>
          <option value="8">8</option>
          <option value="9">9</option>
          <option value="10">10</option>
          <option value="11">11</option>
          <option value="12">12</option>
          <option value="13">13</option>
          <option value="14">14</option>
          <option value="15">15</option>
          <option value="16">16</option>
          <option value="17">17</option>
     </select>
     </div>

     <div class="form-group">
        <label for="inputPrice">стоимость аренды</label>
        <input type="number" @bind-value="@price" id="inputPrice" placeholder="@singleton.currentApartament.Price"></input>
     </div><br/>
 <table>
     <tr>    
        @if (apartmentService.GetImages(singleton.currentApartament).Count == 0)
            {
               <td>фотографии не добавлены</td>
            }
        else
            {
               foreach(var item in apartmentService.GetImages(singleton.currentApartament))
               {
                   service.DownloadImageToWWWRoot(item.Name);
                   
                   <td>
                       <img src="/images/@service.file" width="150px"/>
                       <button class="btn btn-danger align-top" @onclick="(()=>service.DeleteImage(item.Name))">x</button>
                   </td>
               }
            }
    </tr>
</table>
<br />
<FileUpload></FileUpload><br /><br />
  <button class="btn btn-primary" type="submit" @onclick="EditApartment">Сохранить изменения</button>
  <button class="btn btn-danger" @onclick="DeleteApartament">Удалить объявление</button>
</form>
     

@code {
    private string text;
    private int floor; 
    private int houseFloor;
    private double price;
    private User user;
    private Apartament apartament;


    public void EditApartment()
    {
        if(!string.IsNullOrEmpty(singleton.currentUser.Login))
        {
            user = singleton.currentUser;
            apartament = new Apartament(user, text, floor, houseFloor, price);
            DBMethods.EditApartamentDB (singleton.currentApartament, apartament);
            singleton.currentApartament = apartament;
            //transientApartment.currentApartament = apartament;
        }
    }

    public void DeleteApartament()
    {
        
        foreach (var item in apartmentService.GetImages(singleton.currentApartament))
        {
            service.DeleteImage(item.Name);
        }
        //DBMethods.RemoveImagesFromDB(singleton.currentApartament);
        DBMethods.DeleteApartamentDB(singleton.currentApartament);
        singleton.currentApartament = new Apartament();
    }

}